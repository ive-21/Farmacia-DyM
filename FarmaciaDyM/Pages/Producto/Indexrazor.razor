@page "/productos"

@if (!ShowForm)
{
    <h3>Productos (@Items.Count)</h3>
    <div class="mb-2">
        <button class="btn btn-success"
            @onclick="()=>{ShowForm = !ShowForm;}">
            Agregar
        </button>
    </div>
}
<div class="container">
    @if (ShowForm)
    {
        <h3>@TituloForm</h3>
        <EditForm Model="request" OnValidSubmit="Send">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="mb-3 input-group">
                <label class="input-group-text">Codigo</label>
                <InputText class="form-control" @bind-Value="@request.Codigo"></InputText>
            </div>
            <div class="mb-3 input-group">
                <label class="input-group-text">Nombre</label>
                <InputText class="form-control" @bind-Value="@request.Nombre"></InputText>
            </div>
            <div class="mb-3 input-group">
                <label class="input-group-text">Costo</label>
                <InputNumber class="form-control" @bind-Value="@request.Costo"></InputNumber>
            </div>
            <div class="mb-3 input-group">
                <label class="input-group-text">Precio</label>
                <InputNumber class="form-control" @bind-Value="@request.Precio"></InputNumber>
            </div>
            <div class="mb-3 input-group">
                <label class="input-group-text">Existencia</label>
                <InputNumber class="form-control" @bind-Value="@request.Existencia"></InputNumber>
            </div>
            <div class="mb-3 input-group">
                <label class="input-group-text">Fecha/Caducidad</label>
                <InputDate class="form-control" @bind-Value="@request.FechaDeCaducidad"></InputDate>
            </div>
            <div class="mb-3 input-group">
                <label class="input-group-text">Proveedor</label>
                <select class="form-control" @bind="request.ProveedorId">
                    <option disabled>Selecciona un proveedor</option>
                    @foreach (var proveedor in Proveedores)
                    {
                        <option value="@proveedor.Id">
                            @proveedor.Nombre
                        </option>
                    }
                </select>
            </div>

            <div class="btn-group">
                <button type="submit" class="btn btn-outline-success">Guardar</button>
                <button @onclick="Cancelar" class="btn btn-outline-danger">Cancelar</button>
            </div>
        </EditForm>
        <br />
    }
    else
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Codigo</th>
                    <th>Nombre</th>
                    <th>Costo</th>
                    <th>Precio</th>
                    <th>Existencia</th>
                    <th>Fecha/Caducidad</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var customer in Items)
                {
                    <tr>
                        <td>@customer.Codigo</td>
                        <td>@customer.Nombre</td>
                        <td>@customer.Costo</td>
                        <td>@customer.Precio</td>
                        <td>@customer.Existencia</td>
                        <td>@customer.FechaDeCaducidad</td>
                        <td>
                            <div class="group">
                                <button class="btn btn-warning oi oi-pencil" @onclick="()=>Seleccionar(customer.Id)">
                                </button>
                            </div>
                        </td>
                        <td>
                            <div class="btn-group" @onclick="()=>Eliminar(customer)">
                                <button class="btn btn-danger oi oi-trash">
                                </button>
                            </div>
                        </td>

                    </tr>
                }
            </tbody>
        </table>
    }
</div>
@code {
    public string TituloForm => request.Id == 0 ?
    "Agregar producto" : "Modificar producto";

    public bool ShowForm { get; set; } = false;
    public string Filtro { get; set; } = "";
    public List<ProductoResponse> Items { get; set; }
        = new List<ProductoResponse>();

    public List<ProveedorResponse> Proveedores { get; set; } = new List<ProveedorResponse>();
    public ProductosRequest request { get; set; } = new ProductosRequest();

    void Cancelar()
    {
        request = new ProductosRequest();
        ShowForm = false;
    }
    async Task CargarProductos()
    {
        var resultado =
        await productoServices.Consultar(Filtro);
        if (resultado.Success)
        {
            Items = resultado.Data!;
        }
    }

    public void Editar(ProductoResponse customer)
    {
        ShowForm = true;
        request = new ProductosRequest
            {
                Id = customer.Id,
                Codigo = customer.Codigo,
                Nombre = customer.Nombre,
                Costo = customer.Costo,
                Precio = customer.Precio,
                Existencia = customer.Existencia,
                FechaDeCaducidad = customer.FechaDeCaducidad
            };
    }

    protected override async Task OnInitializedAsync()
    {
        await CargarProductos();
    }

    public async Task Send()
    {
        if (request.Id == 0)
        {
            //Debo registrar el contacto..
            var r = await productoServices.Crear(request);
            if (r.Success)
            {
                Cancelar();
                await CargarProductos();
                StateHasChanged();
            }
        }
        else
        {
            //Debo solicitar modificar el contacto...
            var r = await productoServices.Modificar(request);
            if (r.Success)
            {
                Cancelar();
                await CargarProductos();
                StateHasChanged();
            }
        }
    }

    public void Seleccionar(int Id)
    {
        ShowForm = true;
        request = Items
        .Where(c => c.Id == Id)
        .Select(c => c.ToRequest())
        .FirstOrDefault() ?? new ProductosRequest();
    }

    public async Task Eliminar(ProductoResponse customer)
    {
        var resultado = await productoServices.Eliminar(customer.ToRequest());
        if (resultado.Success)
        {
            await CargarProductos();
            StateHasChanged();
        }
    }

}